@use "../../../base/src/scss/mixins" as oe;

.alert {
  position: relative;
  padding: oe.rem(2);

  &__inner-wrapper {
    display: flex;
    align-items: flex-start;
    justify-content: flex-start;
    max-width: oe.rem(110);
    margin: 0 auto;
    container-type: inline-size;

    .alert__icon {
      margin-right: oe.rem(1);

      .sprite {
        width: oe.rem(2);
        height: oe.rem(2);

      }
    }
    @supports (container-type: inline-size ) {
      @container (min-width: 425px) {
        .alert__icon .sprite {
          width: oe.rem(5.5);
          height: oe.rem(5.5);
        }
      }
    }
    .alert__content {
      flex: 1;
      margin-top: oe.rem(0.2);
    }
    @supports (container-type: inline-size ) {
      @container (min-width: 425px) {
        .alert__content {
          margin-top: oe.rem(1.6);
        }
      }
    }
  }

  &--info {
    background-color: color-mix(in srgb, var(--white), var(--sky-blue) 10%);
    border-top: oe.rem(1) solid var(--sky-blue);

    .sprite {
      color: var(--sky-blue);
    }
  }

  &--error {
    background-color: color-mix(in srgb, var(--white), var(--error-red) 6%);
    border-top: oe.rem(1) solid var(--error-red);

    .sprite {
      color: var(--error-red);
    }
  }

  &--warning {
    background-color: color-mix(in srgb, var(--white), var(--keystone) 20%);
    border-top: oe.rem(1) solid var(--keystone);

    .sprite {
      color: hsl(from var(--invent-orange) h s calc(l - 4.5));

      // @TODO: Remove when relative colors are supported.
      @supports not (color: hsl(from white h s l)) {
        color: #d27600;
      }
    }
  }

  &--status {
    background-color: color-mix(in srgb, var(--white), var(--creek) 10%);
    border-top: oe.rem(1) solid var(--creek);

    .sprite {
      color: var(--creek);
    }
  }
}
