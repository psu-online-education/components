@use "../../../base/src/scss/mixins" as oe;

.more-menu {

  &__toggle {
    font-size: var(--font-size--3xsmall);
    font-weight: var(--font-weight--semibold);
    flex-direction: row;
    justify-content: space-around;
    width: auto;
    height: auto;
    min-height: 100%;
    padding: oe.rem(1) oe.rem(1.5);
    font-family: var(--font-family--default);
    background: var(--light-mauve);
    border: none;
    color: var(--beaver-blue);
    cursor: pointer;
    display: inline-flex;
    gap: oe.rem(.5);
    align-items: center;
    border-radius: var(--button-border-radius--default);
    box-shadow: oe.rem(.1) oe.rem(.1) color-mix(in srgb, var(--beaver-blue) 50%, transparent);
    transition: color var(--transition-duration--default) linear,
                background-color var(--transition-duration--default) linear,
                box-shadow var(--transition-duration--default) linear;
    line-height: var(--line-height--nospace);

    .sprite {
      opacity: .75;
      max-width: 100%;
      overflow: visible;
      height: oe.rem(1.4);
      width: auto;
      margin-top: 0;
    }

    &--stacked {
      flex-direction: column;
      font-size: var(--font-size--2xsmall);
      padding: oe.rem(.5);
      justify-content: center;
      width: oe.rem(4.4);
      height: oe.rem(4.4);
      font-weight: var(--font-weight--regular);

      @include oe.bp(xs) {
        font-size: var(--font-size--xsmall);
        padding: oe.rem(.6);
        width: oe.rem(5.2);
        height: oe.rem(5.2);
      }

      @include oe.bp(s) {
        font-size: var(--font-size--msmall);
        padding: oe.rem(.8);
        width: oe.rem(6.3);
        height: oe.rem(6.3);
      }

      @include oe.bp(m) {
        font-size: var(--font-size--default);
        padding: oe.rem(.9);
        width: oe.rem(7.2);
        height: oe.rem(7.2);
      }

      @include oe.bp(l) {
        font-size: var(--font-size--mlarge);
        padding: oe.rem(1);
        width: oe.rem(8);
        height: oe.rem(8);
      }

      .sprite {
        height: oe.rem(.605);
        margin-top: oe.rem(.3);

        @include oe.bp(xs) {
          height: oe.rem(.66);
        }

        @include oe.bp(s) {
          height: oe.rem(.77);
        }

        @include oe.bp(m) {
          height: oe.rem(.825);
        }

        @include oe.bp(l) {
          height: oe.rem(.88);
        }
      }
    }

    &:is(:focus-visible > .more-menu__toggle) {
      outline: none;
    }

    &:is([aria-expanded="true"] > .more-menu__toggle) {
      box-shadow: oe.rem(-.1) oe.rem(-.1) var(--beaver-blue);
    }

    &:hover, &:is(:focus-visible > .more-menu__toggle) {
      background: var(--pugh-blue);
      box-shadow: oe.rem(.1) oe.rem(.1) var(--nittany-navy);
      color: var(--nittany-navy);
    }
  }

  &__list {
    list-style-type: none;
    margin: 0;
    padding: 0;
  }

  &__link {
    color: var(--nittany-navy);
    display: block;
    padding: oe.rem(1);
    line-height: var(--line-height--xsnug);
    font-size: var(--font-size--small);
    text-decoration: underline;
    text-decoration-color: transparent;
    transition: text-decoration-color var(--transition-duration--default), color var(--transition-duration--default);

    @include oe.bp(xs) {
      font-size: var(--font-size--default);
    }

    &:hover, &:focus-visible {
      color: var(--pa-link);
      text-decoration-color: var(--pa-link);
    }
  }
}

// Optional peer dependency can influence certain styles.
.bg--light-grey {
  .more-menu__toggle {
    background: var(--white);

    &:hover {
      background: var(--pugh-blue);
    }

    &:focus-visible {
      background: var(--pugh-blue);
    }
  }
}
