@use "../../../base/src/scss/mixins" as oe;

.tabs-list {
  display: inline-flex;
  max-width: 100%;
  align-items: flex-end;

  &--expand-to-fit {
    width: 100%;
  }

  &--automatic {
    align-items: inherit;
    flex-flow: row wrap;

    &[data-flex-mode="horizontal"] {
      align-items: flex-end;
    }

    &[data-flex-mode="vertical"],
    &[data-flex-mode="mixed"] {
      display: block;
      width: 100%;

      .tabs-list__button {
        width: 100%;
      }
    }
  }

  &--automatic[data-flex-mode="vertical"],
  &--automatic[data-flex-mode="mixed"],
  &--vertical {
    display: block;

    .tabs-list__button {
      width: 100%;
      outline-offset: oe.rem(.2);
    }
  }

  &--short,
  &--automatic[data-flex-mode="vertical"],
  &--automatic[data-flex-mode="mixed"],
  &--vertical {
    .tabs-list__button {
      padding: oe.rem(1.2) 0;

      @include oe.bp(xs) {
        padding: oe.rem(1.4) 0;
      }

      @include oe.bp(s) {
        padding: oe.rem(1.5) 0;
      }

      @include oe.bp(m) {
        padding: oe.rem(2) 0;
      }
    }
  }

  &--borderless-inactive {
    .tabs-list__button {
      box-shadow: 0 oe.rem(.1) 0 0 color-mix(in srgb, transparent 100%, transparent);

      // @TODO: Remove fallback when appropriate.
      @supports not (color: color-mix(in srgb, white, white)) {
        box-shadow: 0 oe.rem(.1) 0 0 transparent;
      }
    }
  }

  &--short {
    .tabs-list__button {
      line-height: var(--line-height--xsnug);
      padding: oe.rem(1.2) 0;
      font-size: oe.rem(1.2);

      @include oe.bp(xs) {
        padding: oe.rem(1.4) 0;
        font-size: oe.rem(1.3);
      }

      @include oe.bp(smaller) {
        font-size: oe.rem(1.4);
      }

      @include oe.bp(s) {
        padding: oe.rem(1.5) 0;
        font-size: oe.rem(1.5);
      }

      @include oe.bp(m) {
        padding: oe.rem(2) 0;
        font-size: oe.rem(1.6);
      }

      @include oe.bp(l) {
        font-size: oe.rem(1.7);
      }
    }
  }

  &__button {
    /* @TODO: Replace with gap when flex-gap is available. */
    margin-left: oe.rem(.4);
    margin-right: oe.rem(.4);

    color: var(--beaver-blue);
    font-size: oe.rem(1.2);
    font-family: var(--font-family--default);
    font-weight: var(--font-weight--semibold);
    line-height: calc(26/22);
    letter-spacing: -0.002em;
    padding: 0 0 oe.rem(.6) 0;
    flex: 1 1 0;
    width: oe.rem(20);
    min-width: min-content;
    vertical-align: bottom;
    background-color: transparent;
    border: none;
    text-align: left;
    outline-offset: oe.rem(.7);
    transition: color var(--transition-duration--default) linear;
    box-shadow: 0 oe.rem(.1) 0 0 color-mix(in srgb, var(--beaver-blue) calc(100% / 1.5), transparent);

    // @TODO: Remove fallback when appropriate.
    @supports not (color: color-mix(in srgb, white, white)) {
      box-shadow: 0 oe.rem(.1) 0 0 rgba(#1e407c, calc(1 / 1.5));
    }

    @media screen and (prefers-reduced-motion: no-preference) {
      transition: color var(--transition-duration--default) linear,
                  box-shadow var(--transition-duration--default) linear;
    }

    @include oe.bp(xs) {
      font-size: oe.rem(1.4);
      padding: 0 0 oe.rem(.8) 0;
    }

    @include oe.bp(s) {
      font-size: oe.rem(1.7);
      font-weight: var(--font-weight--regular);
      letter-spacing: .01em;
      margin-left: oe.rem(.45);
      margin-right: oe.rem(.45);
      padding: 0 0 oe.rem(1) 0;
    }

    @include oe.bp(m) {
      font-size: oe.rem(1.9);
      padding: 0 0 oe.rem(1.1) 0;
    }

    @include oe.bp(l) {
      font-size: oe.rem(2);
      padding: 0 0 oe.rem(1.2) 0;
    }

    @include oe.bp(xl) {
      font-size: oe.rem(2.2);
      margin-left: oe.rem(.5);
      margin-right: oe.rem(.5);
      padding: 0 0 oe.rem(1.3) 0;
    }

    &[aria-selected="true"] {
      cursor: default;
      font-weight: var(--font-weight--bold);
      letter-spacing: -.007em;
      box-shadow: 0 oe.rem(.5) 0 0 color-mix(in srgb, var(--beaver-blue) 100%, transparent);

      // @TODO: Remove fallback when appropriate.
      @supports not (color: color-mix(in srgb, white, white)) {
        box-shadow: 0 oe.rem(.5) 0 0 var(--beaver-blue);
      }
    }

    &[aria-selected="false"]:hover {
      color: var(--pa-link);
      cursor: pointer;
      box-shadow: 0 oe.rem(.5) 0 0 color-mix(in srgb, var(--pa-link) 100%, transparent);

      // @TODO: Remove fallback when appropriate.
      @supports not (color: color-mix(in srgb, white, white)) {
        box-shadow: 0 oe.rem(.5) 0 0 var(--pa-link);
      }
    }

    &:focus {
      outline: none;
    }

    &:focus-visible {
      outline: oe.rem(.2) solid var(--focus-indicator-color);
      box-shadow: 0 oe.rem(.5) 0 0 color-mix(in srgb, var(--beaver-blue) 100%, transparent);

      // @TODO: Remove fallback when appropriate.
      @supports not (color: color-mix(in srgb, white, white)) {
        box-shadow: 0 oe.rem(.5) 0 0 var(--beaver-blue);
      }
    }
  }

  &__parenthetical {
    display: inline-block;
    font-size: oe.rem(1.2);
    font-weight: var(--font-weight--regular);
    letter-spacing: .01em;
    pointer-events: none;

    @include oe.bp(xs) {
      font-size: oe.rem(1.3);
    }

    @include oe.bp(s) {
      font-size: oe.rem(1.5);
    }

    @include oe.bp(m) {
      font-size: oe.rem(1.6);
    }

    @include oe.bp(xl) {
      font-size: oe.rem(1.7);
    }

    &::before {
      content: ' ';
      display: inline-block;
    }
  }

}
